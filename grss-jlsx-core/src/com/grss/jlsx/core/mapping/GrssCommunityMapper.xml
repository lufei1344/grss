<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grss.jlsx.core.dao.GrssCommunityDao" >
  <resultMap id="BaseResultMap" type="com.grss.jlsx.core.bean.GrssCommunity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" javaType="java.util.Date" />
    <result column="create_user_id" property="createUserId" javaType="java.lang.String" />
    <result column="resident_total" property="residentTotal" javaType="java.lang.String" />
    <result column="topic_total" property="topicTotal" javaType="java.lang.String" />
  </resultMap>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select *
    from grss_community
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from grss_community
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertByGrssCommunity" parameterType="com.grss.jlsx.core.bean.GrssCommunity" >
    insert into grss_community
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate},
      </if>
      <if test="createUserId != null" >
        #{createUserId},
      </if>
    </trim>
  </insert>
  <update id="updateByGrssCommunity" parameterType="com.grss.jlsx.core.bean.GrssCommunity" >
    update grss_community
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectGrssCommuniryByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
  SELECT 
  gc.*,
  m.ct AS resident_total,
  IF (n.ct, n.ct, 0) AS topic_total
FROM
  grss_user_community guc,grss_community gc 
  LEFT JOIN 
    (SELECT 
      h.id,
      COUNT(0) ct 
    FROM
      grss_community h,
      `grss_posts` gp 
    WHERE h.id = gp.community_id GROUP BY h.`id`) n 
    ON gc.id = n.id,
    (SELECT 
    guc.community_id com_id,
    COUNT(0) ct
  FROM
    grss_community gc,
    `grss_user_community` guc 
  WHERE gc.id = guc.community_id 
  GROUP BY guc.community_id) m
WHERE
 gc.id = m.com_id AND
 guc.`community_id` = gc.`id` AND
 guc.`user_id` = #{userId}
LIMIT #{offset},#{pageSize}
 </select>
  <select id="selectGrssCommuniryByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
SELECT
	gc.*, IFNULL(n.ct, 0) AS topic_total,
	IFNULL(m.ct, 0) AS resident_total
FROM
	`grss_community` gc
LEFT JOIN (
	SELECT
		h.id,
		COUNT(0) ct
	FROM
		grss_community h,
		`grss_posts` gp
	WHERE
		h.id = gp.community_id
	GROUP BY
		h.id
) n ON gc.id = n.id,
 (
	SELECT
		guc.community_id com_id,
		COUNT(0) ct
	FROM
		grss_community gc,
		`grss_user_community` guc
	WHERE
		gc.id = guc.community_id
	GROUP BY
		guc.community_id
) m
WHERE
	m.com_id = gc.id
AND gc.`name` LIKE "%"#{keyword}"%" LIMIT #{offset},#{pageSize}
  </select>
  <select id="selectGrssCommunityByRecommentd" resultMap="BaseResultMap">
  	SELECT 
  h.*,
  IFNULL(h2.total, 0) residentTotal,
  IFNULL(h1.total, 0) topicTotal 
FROM
  `grss_community` h 
  LEFT JOIN 
    (SELECT 
      gp.`community_id`,
      COUNT(0) total 
    FROM
      `grss_community` gc,
      `grss_posts` gp 
    WHERE gc.`id` = gp.`community_id`
    GROUP BY gp.`community_id`) h1 
    ON h.`id` = h1.community_id,
  (SELECT 
    COUNT(0) total,
    guc.`community_id` 
  FROM
    `grss_community` gc,
    `grss_user_community` guc 
  WHERE gc.`id` = guc.`community_id` 
  GROUP BY guc.`community_id`) h2 
WHERE h.`id` = h2.community_id 
ORDER BY (residentTotal + topicTotal) DESC 
LIMIT 3
  </select>
  <resultMap type="com.grss.jlsx.core.bean.GrssCommunity" id="BaseResultExtendMap" extends="BaseResultMap">
  	<association property="grssUser" javaType="com.grss.jlsx.core.bean.GrssUser">
  		<id column="user_id" property="userId"/>
  		<result column="user_photo" property="userPhoto"/>
  		<result column="nike_name" property="nikeName"/>
  	</association>
  </resultMap>
  <select id="selectGrssCommunityById" parameterType="java.lang.String" resultMap="BaseResultExtendMap">
  	SELECT 
  h.*,
  h3.*,
  IFNULL(h2.total, 0) resident_total,
  IFNULL(h1.total, 0) topic_total 
FROM
  `grss_community` h 
  LEFT JOIN 
    (SELECT 
      gp.`community_id`,
      COUNT(0) total 
    FROM
      `grss_community` gc,
      `grss_posts` gp 
    WHERE gc.`id` = gp.`community_id`  
    GROUP BY gp.`community_id`) h1 
    ON h.`id` = h1.community_id,
  (SELECT 
    COUNT(0) total,
    guc.`community_id` 
  FROM
    `grss_community` gc,
    `grss_user_community` guc 
  WHERE gc.`id` = guc.`community_id` 
  GROUP BY guc.`community_id`) h2,grss_user h3 
WHERE h.`id` = h2.community_id 
 AND h.`create_user_id` = h3.`user_id`
 AND h.`id` = #{communityId}
  </select>
  
  <select id="findGrssCommuniry" parameterType="java.util.Map" resultMap="BaseResultExtendMap">
  		SELECT model.* FROM grss_community model 
  		<where>
  			<if test="name != null">
				model.name like "%"#{name}"%"
			</if>
  		</where>
  		order by model.create_date desc
  		limit #{offset},#{pageSize}
  </select>
  
  <select id="findGrssCommuniryCount" parameterType="java.util.Map"  resultType="java.lang.Integer">
  	SELECT count(model.id) FROM grss_community model 
  		<where>
  			<if test="name != null">
				model.name like "%"#{name}"%"
			</if>
  		</where>
  </select>
  
</mapper>